"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = require("assert");
function prepareStackTrace() {
    return new Error();
}
exports.prepareStackTrace = prepareStackTrace;
/**
 * @param fake The error which collects stack information.
 * @param real The real error which contains error message.
 */
function beautifyStack(fake, real) {
    const stack = fake.stack.split('\n');
    stack.splice(1, 2);
    stack[0] = real.message;
    /* istanbul ignore if */
    if (typeof jest === 'object' && real instanceof assert_1.AssertionError) {
        stack[0] = ''; // Jest will show error message twice, so we remove it.
    }
    real.stack = stack.join('\n');
    return real;
}
exports.beautifyStack = beautifyStack;
function throwError(error) {
    /* istanbul ignore if, but it's actually tested */
    if (error instanceof assert_1.AssertionError) {
        throw error;
    }
    if (error.stack && error.stack.includes('rize')) {
        throw error;
    }
}
exports.throwError = throwError;
process.on('unhandledRejection', throwError);
