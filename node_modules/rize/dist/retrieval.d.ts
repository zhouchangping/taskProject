import puppeteer from 'puppeteer';
import Infrastructure from './infrastructure';
export default class Retrieval extends Infrastructure {
    title(): Promise<string>;
    text(selector?: string): Promise<string>;
    html(selector?: string, range?: 'inner' | 'outer'): Promise<string>;
    attribute(selector: string, attribute: string): Promise<string | null>;
    style(selector: string, property: string): Promise<string>;
    value(selector: string): Promise<string | null>;
    value(selector: string, newValue: string): this;
    hasClass(selector: string, className: string): Promise<boolean>;
    url(): Promise<{}>;
    queryString(key: string): Promise<string | string[] | undefined>;
    cookie(): Promise<{}>;
    cookies(): Promise<{}>;
    isVisible(selector: string): Promise<boolean>;
    isPresent(selector: string): Promise<boolean>;
    find<T, U extends any[]>(selector: string, fn: ((selector: string, ...args: U) => T), ...args: U): T;
    findAll<T, U extends any[]>(selector: string, index: number, fn: ((selector: string, ...args: U) => T), ...args: U): T;
    findByXPath<T, U extends any[]>(expression: string, index: number, fn: ((selector: string, ...args: U) => T), ...args: U): T;
    findWithText<T, U extends any[]>(selector: string, text: string, index: number, fn: ((selector: string, ...args: U) => T), ...args: U): T;
    viewport(): Promise<puppeteer.Viewport>;
}
