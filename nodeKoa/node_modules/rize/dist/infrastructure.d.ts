/// <reference types="node" />
import EventEmitter from 'events';
import puppeteer from 'puppeteer';
export default class Infrastructure {
    protected queue: symbol[];
    protected eventBus: EventEmitter;
    protected hooks: {
        beforeLaunch(): void;
        afterLaunched(): void;
        beforeEachStep(): void;
        afterEachStep(): void;
        beforeExit(): void;
    };
    protected _browser: puppeteer.Browser;
    protected currentPageIndex: number;
    protected preservePage: puppeteer.Page;
    protected pages: Array<{
        name: string;
        page: puppeteer.Page;
    }>;
    /**
     * Low-level instance of puppeteer's browser.
     */
    readonly browser: puppeteer.Browser;
    /**
     * Low-level instance of puppeteer's current page.
     */
    readonly page: puppeteer.Page;
    protected push(fn: () => any, trace?: Error): this;
    protected clearQueue(): this;
    protected clearQueueNow(): this;
}
